<?xml version="1.0" ?>
<robot name="eddy" xmlns:xacro="http://ros.org/wiki/xacro">
	
	<!-- All offsets are placeholder values ATM -->
	
	<xacro:property name="thruster_offset_y" value="0.08"/>
	<xacro:property name="thruster_offset_z" value="0.023"/>
	
	<xacro:property name="imu_offset_x" value="-0.032"/>
	<xacro:property name="imu_offset_y" value="0.0"/>
	<xacro:property name="imu_offset_z" value="0.068"/>
	
	<xacro:property name="gps_offset_x" value="-0.032"/>
	<xacro:property name="gps_offset_y" value="0.0"/>
	<xacro:property name="gps_offset_z" value="0.068"/>
	
	<xacro:property name="sonar_offset_x" value="-0.032"/>
	<xacro:property name="sonar_offset_y" value="0.0"/>
	<xacro:property name="sonar_offset_z" value="0.068"/>
	
	<xacro:property name="camera_size" value="${camera_size}"/>  <!-- Size of square 'camera' box -->
	<xacro:property name="camera_offset_x" value="${camera_offset_x}"/>
	<xacro:property name="camera_offset_y" value="${camera_offset_y}"/>
	<xacro:property name="camera_offset_z" value="${camera_offset_z}/>

	<link name="base_footprint"/>
		 <inertial>
		 	<origin xyz="0 0 0"/>
		 	<mass value="1"/>
		 	<inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
  	  	</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.001 0.001 0.001"/>
			</geometry>
		</visual>
	</link>
	
	<gazebo refrence="base_footprint">
	</gazebo>
	
	<joint name="base_joint" type="fixed">
		<parent link="base_footprint"/>
		<child link="base_link"/>
 		<origin xyz="0.0 0.0 0.010" rpy="0 0 0"/>
	</joint>
	
	<link name="base_link">
		<visual>
			<origin xyz="0 0 0" rpy="1.57 0 0"/>
			<geometry>
				<mesh filename="package://eddy_description/meshes/eddy.stl" scale="1.0 1.0 1.0"/>
			</geometry>
		</visual>
		<collision>
			<origin xyz="0 0 0" rpy="1.57 0 0"/>
			<geometry>
				<mesh filename="package://eddy_description/meshes/eddy.stl" scale="1.0 1.0 1.0"/>
			</geometry>
		</collision>
		<inertial>
      			<mass value="${mass_value}" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
      			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
   		</inertial>
	</link>
	
	<gazebo reference="base_link">
	</gazebo>
	
	<!-- Accutuated Joint (Thruster Blades) -->
	
	
	<!-- Left Thruster -->
	
	<joint name="thruster_left_joint" type="continuous">
		<parent link="base_link"/>
		<child link="thruster_left_link"/>
		<origin xyz="0.0 ${thruster_offset_y} ${thruster_offset_z}" rpy="-1.57 0 0"/>
		<axis xyz="0 0 1"/>
	</joint>
	
	<link name="thruster_left_link">     
		<visual>
			<origin xyz="0 0 0" rpy="1.57 0 0"/>
			<geometry>
				<mesh filename="package://eddy_description/meshes/thruster.stl" scale="0.001 0.001 0.001"/>
			</geometry>
		</visual>
		<collision>
			<origin xyz="0 0 0" rpy="1.57 0 0"/>
			<geometry>
				<mesh filename="package://eddy_description/meshes/thruster.stl" scale="0.001 0.001 0.001"/>
			</geometry>
		</collision>
		<inertial>
      			<mass value="1e-5" />
      			<origin xyz="0 0 0" rpy="0 0 0"/>
      			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
   		 </inertial>
	</link>
	
	<gazebo reference="thruster_left_link">
		<material>Gazebo/Blue</material>
	</gazebo>
	
	<!-- Right Thruster -->
	
	<joint name="thruster_right_joint" type="continuous">
		<parent link="base_link"/>
		<child link="thruster_right_link"/>
		<origin xyz="0.0 ${-1 * thruster_offset_y} ${thruster_offset_z}" rpy="-1.57 0 0"/>
		<axis xyz="0 0 1"/>
	</joint>
	
	<link name="thruster_right_link">
		<visual>
			<origin xyz="0 0 0" rpy="1.57 0 0"/>
			<geometry>
				<mesh filename="package://eddy_description/meshes/thruster.stl" scale="0.001 0.001 0.001"/>
			</geometry>
		</visual>
		<collision>
			<origin xyz="0 0 0" rpy="1.57 0 0"/>
			<geometry>
				<mesh filename="package://eddy_description/meshes/thruster.stl" scale="0.001 0.001 0.001"/>
			</geometry>
		</collision>
		<inertial>
      			<mass value="1e-5" />
      			<origin xyz="0 0 0" rpy="0 0 0"/>
      			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
   		 </inertial>
	</link>
	<gazebo reference="thruster_left_link">
		<material>Gazebo/Blue</material>
	</gazebo>

	<!-- Sensor frames  -->
	
	<!-- IMU frame  -->

	<joint name="imu_joint" type="fixed">
		<parent link="base_link"/>
		<child link="imu_link"/>
		<origin xyz="${imu_offset_x} ${imu_offset_y} ${imu_offset_z}" rpy="0 0 0"/>
	</joint>
	
	<link name="imu_link"/>
	
	<!-- GPS frame  -->
	
	<joint name="gps_joint" type="fixed">
		<parent link="base_link"/>
		<child link="gps_link"/>
		<origin xyz="${gps_offset_x} ${gps_offset_y} ${gps_offset_z}" rpy="0 0 0"/>
	</joint>
	
	<link name="gps_link"/>
	
	<!-- Sonar frame  -->
	
	<joint name="sonar_joint" type="fixed">
		<parent link="base_link"/>
		<child link="sonar_link"/>
		<origin xyz="${sonar_offset_x} ${sonar_offset_y} ${sonar_offset_z}" rpy="0 0 0"/>
	</joint>
	
	<link name="sonar_link"/>
	
	<!-- Camera frame  -->
	
	<link name="camera_link">
  	  <visual>
   	   <geometry>
   	     <box size="${camera_size} ${camera_size} ${camera_size}"/>
	   </geometry>
   	 </visual>
   	 <collision>
   	   <geometry>
   	     <box size="${camera_size} ${camera_size} ${camera_size}"/>
 	     </geometry>
         </collision>
	<inertial>
      		<mass value="1e-5" />
      		<origin xyz="0 0 0" rpy="0 0 0"/>
      		<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
       </inertial>
 	</link>
	
 	 <joint name="camera_joint" type="fixed">
	    <origin xyz="${camera_origin_x} ${camera_origin_y} ${camera_origin_z}" rpy="0 0 0"/>
	    <parent link="base_link"/>
	    <child link="camera_link"/>
	  </joint>
	  
	<! -- Gazebo Plugins -->
	
	<!--Gazebo Camera Plugin-->
	 
	<gazebo reference="camera_link">
		<material>Gazevo/Blue<material>
		<sensor type="camera" name="camera_underwater">
			<update_rate>30.0</update_rate>
			<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
        				<image>
          					<width>640</width>
          					<height>480</height>
          					<format>R8G8B8</format>
        				</image>
        				<clip>
        					<near>0.02</near>
        					<far>300</far>
       					</clip>
      					<noise>
          					<type>gaussian</type>
          						<!-- Noise is sampled independently per pixel on each frame.
          						     That pixel's noise value is added to each of its color
          						     channels, which at that point lie in the range [0,1]. -->
          					<mean>0.0</mean>
          					<stddev>0.002</stddev>
        				</noise>
			</camera>
			<plugin name="camera_controller" filename="libgazebo_ros_camera.so"
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>/eddy/camera_underwater</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<compressedImageTopicName>compressed</compressedImageTopicName>
				<frameName>camera_link</frameName>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
			</plugin>
		</sensor>
	</gazebo>
	
	<gazebo refrence="imu_link">
		<plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
			<alwaysOn>true</alwaysOn>
			<bodyName>base_footprint</bodyName>
			<topicName>imu</topicName>
			<serviceName>imu_service</serviceName>
			<gaussianNoise>0.0</gaussianNoise>
			<updateRate>20.0</updateRate>
		</plugin>
	</gazebo>
		
	<gazebo>
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
			<updateRate>${update_rate}</updateRate>
			<leftJoint>base_link_left_wheel_joint</leftJoint>
			<rightJoint>base_link_right_wheel_joint</rightJoint>
			<wheelSeparation>0.5380</wheelSeparation>
			<wheelDiameter>0.2410</wheelDiameter>
			<wheelAcceleration>1.0</wheelAcceleration>
			<wheelTorque>20</wheelTorque>
			<commandTopic>cmd_vel</commandTopic>
			<odometryTopic>odom</odometryTopic>
			<odometryFrame>odom</odometryFrame>
			<robotBaseFrame>base_footprint</robotBaseFrame>
			<odometrySource>1</odometrySource>
			<publishWheelTF>true</publishWheelTF>
			<publishOdom>true</publishOdom>
			<publishWheelJointState>true</publishWheelJointState>
			<legacyMode>false</legacyMode>
  		</plugin>
  	

		<plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
			<commandTopic>cmd_vel</commandTopic>
			<odometryTopic>odom</odometryTopic>
			<odometryFrame>odom</odometryFrame>
			<odometryRate>20.0</odometryRate>
			<robotBaseFrame>base_footprint</robotBaseFrame>
		</plugin>
			
	</gazebo>
	
	</link name="transducer">
	</link>

	
	<joint name="transducer_joint" type="fixed">
		<origin xyz="0 0 -0.2921" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="transducer"/>
	</joint>

	<link name="dummy_transducer">
	</link>
	
	<joint name="dummy_transducer_joint" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<parent link="transducer"/>
		<child link="dummy_transducer"/>
	</joint>

	<gazebo reference="dummy_transducer">
		<sensor type="sonar" name="transducer">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
			<always_on>true</always_on>
			<update_rate>1.0</update_rate>
            <sonar>
                <min>0.6</min>
                <max>140</max>
                <radius>1</radius>
            </sonar>
			<plugin name="eddy_description" filename="libgazebo_ros_sonar.so">
				<topicName>/eddy/sonar</topicName>
				<gaussianNoise>0.0</gaussianNoise>
				<frameId>transducer</frameId>
			</plugin>
		</sensor>
	</gazebo>

</robot>
